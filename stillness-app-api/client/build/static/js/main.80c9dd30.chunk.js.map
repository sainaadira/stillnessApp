{"version":3,"sources":["Components/Authentication/Login/Login.js","Components/Authentication/Signup/Signup.js","Components/Authentication/AuthFlow/AuthFlow.js","Components/Authentication/LandingPage/LandingPage.js","Components/MoodJournal/Components/MoodButton/MoodButton.js","Components/MoodJournal/MoodJournal.js","Components/Breather/Components/SoundButton/SoundButton.js","Components/Breather/Breather.js","Components/JournalEntry/JournalEntry.js","Components/MoodJournalHistory/MoodJournalHistory.js","Components/App/App.js","index.js"],"names":["useStyles","makeStyles","theme","paper","display","flexDirection","alignItems","form","width","marginTop","spacing","submit","margin","loginButton","homeLink","color","Login","classes","useState","email","password","setForm","handleChange","e","target","name","value","prevState","className","Container","component","maxWidth","action","method","Grid","container","item","xs","TextField","onChange","variant","required","fullWidth","id","label","autoComplete","type","FormControlLabel","control","Checkbox","Button","onClick","console","log","preventDefault","fetch","headers","body","JSON","stringify","then","res","window","location","href","Link","Signup","firstName","lastName","phone","contactInfo","setContactInfo","handleContactChange","sm","autoFocus","avatar","backgroundColor","buttonContainer","AuthFlow","view","setView","toggleView","Avatar","ButtonGroup","aria-label","LandingPage","direction","justify","md","alt","src","MoodButton","props","t","active","setMood","size","style","charAt","toUpperCase","slice","MoodJournal","today","Date","toLocaleDateString","weekday","year","month","day","moodColor","yellow","grey","blue","red","purple","moods","moodOption","setMoodOption","activeMoodColor","setActiveMoodColor","journalSpace","setJournalSpace","handleMood","mood","find","m","map","key","rows","cols","textAreaValue","placeholder","journalEntry","json","data","success","sounds","Ambient","Audio","Nature","Ocean","Dreamy","SoundButton","isPlaying","setIsPlaying","toggleSound","pause","play","Breather","counterInterval","breatheText","setBreatheText","breatheAnimation","setTimeout","totalTime","clearInterval","useEffect","counter","setInterval","animationTime","breatherClass","JournalEntry","journal","entry","setEntry","editMode","setEditMode","editJournalEntry","setEditJournalEntry","Icon","_id","response","fill","fontSize","journalDate","createdAt","journalTime","toLocaleTimeString","hour","minute","startIcon","mode","journals","filter","MoodJournalHistory","setJournals","result","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80c9dd30.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport \"./Login.css\"\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\n\n\n\n\n// all of the styles from material ui\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    // marginTop: theme.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  loginButton: {\n    marginTop: '15px;'\n  },\n  homeLink: {\n    color: 'black',\n  }\n\n}));\n\nconst Login = () => {\n\n  const classes = useStyles()\n\n  const [form, setForm] = useState({\n    email: '',\n    password: ''\n  })\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setForm(prevState => {\n      if (name === \"email\") {\n        return {\n          email: value,\n          password: prevState.password\n        }\n      } else {\n        return {\n          email: prevState.email,\n          password: value\n        }\n      }\n    })\n  }\n\n  const handleSubmit = (e) => {\n    console.log(form)\n    e.preventDefault()\n    fetch('/api/login', {\n      method: \"Post\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(form)\n    }).then(res => window.location.href = '/app/moodJournal')\n  }\n  return (\n\n    <div className=\"login-container\">\n\n      <Container component=\"main\" maxWidth=\"sm\">\n        <div className={classes.paper}>\n\n          <form className={classes.form} action='/api/login' method=\"POST\" >\n\n            {/* textfields for login component */}\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  onChange={handleChange}\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  value={form.email}\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  onChange={handleChange}\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  value={form.password}\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                />\n              </Grid>\n\n              <FormControlLabel\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                label=\"Remember me\"\n              />\n\n              {/* login button */}\n              <Button fullWidth className={classes.loginButton} variant=\"contained\" color=\"default\" onClick={handleSubmit} type=\"submit\">\n                Login\n              </Button>\n\n              {/* link that directs user to homepage */}\n              <Grid item>\n                <Link className={classes.homeLink} onClick={() => window.location.href = \"/\"} variant=\"body2\">\n                  {\"Go Home\"}\n                </Link>\n              </Grid>\n\n            </Grid>\n          </form>\n        </div>\n      </Container>\n    </div>\n  )\n}\n\nexport default Login; ","import React, { useState } from 'react'\nimport './Signup.css'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    // marginTop: theme.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\nconst Signup = () => {\n  // calling useStyles function to handle the property changes\n  const classes = useStyles();\n\n  // contactInfo variable to store the user's credentials and setContactInfo is the function that will handle the state change for the inputs.\n  const [contactInfo, setContactInfo] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    phone: ''\n  })\n  // handleContactChange is responsible for accessing the value that the user types into the inputs\n  const handleContactChange = (e) => {\n    const { name, value } = e.target\n    setContactInfo(prevState => {\n      return {\n        ...prevState,\n        [name]: value\n      }\n    })\n  }\n\n  return (\n    <div className=\"signup-container\">\n\n      <Container component=\"main\" maxWidth=\"sm\">\n        <div className={classes.paper}>\n\n          <form className={classes.form} method=\"POST\" action='/api/signup'>\n            {/* in order for react to read my inputs they must be in self closing tags */}\n\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  onChange={handleContactChange}\n                  autoComplete=\"fname\"\n                  name=\"firstName\"\n                  value={contactInfo.firstName}\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  autoFocus\n                />\n              </Grid>\n\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  onChange={handleContactChange}\n                  autoComplete=\"lname\"\n                  name=\"lastName\"\n                  value={contactInfo.lastName}\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  autoFocus\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  onChange={handleContactChange}\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  value={contactInfo.email}\n                  autoComplete=\"email\"\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  onChange={handleContactChange}\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  value={contactInfo.password}\n                  autoComplete=\"current-password\"\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  onChange={handleContactChange}\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"phone\"\n                  label=\"Phone Number\"\n                  name=\"phone\"\n                  value={contactInfo.phone}\n                  autoComplete=\"phone\"\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <FormControlLabel\n                  control={<Checkbox value=\"allowTexts\" color=\"primary\" />}\n                  label=\"By signing up, I agree to receive uplifting SMS messages.  \n                  * Message and data rates may apply depending on your mobile carrier.\"\n                />\n              </Grid>\n\n              <Button variant=\"contained\" fullWidth color=\"default\" onClick={() => window.location.href = \"/app/MoodJournal\"}>\n                Sign me up\n        </Button>\n\n            </Grid>\n\n          </form>\n        </div>\n\n      </Container>\n    </div >\n  )\n}\n\nexport default Signup;","import React, { useState } from 'react'\nimport Login from '../Login/Login'\nimport Signup from '../Signup/Signup'\nimport './AuthFlow.css'\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: '#581845'\n  },\n\n  buttonContainer: {\n    display: 'flex',\n    flexDirection: 'row'\n  }\n\n}));\n\n// AuthFlow component begins here ______\nconst AuthFlow = () => {\n\n  const classes = useStyles()\n\n  //  variable used to toggle between login and signup components\n  const [view, setView] = useState('login')\n\n  const toggleView = (view) => {\n    setView(view)\n  }\n  return (\n    <div className=\"auth-container\">\n\n      <Container maxWidth=\"sm\" className={classes.paper}>\n\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n\n        {/* login/signup button */}\n        <ButtonGroup fullWidth aria-label=\"outlined button group\">\n          <Button className='login-signup-btn' variant={view === 'login' ? 'contained' : 'outlined'} onClick={() => toggleView('login')} >Login</Button>\n          <Button className='login-signup-btn' variant={view === 'signup' ? 'contained' : 'outlined'} onClick={() => toggleView('signup')} >Signup</Button>\n        </ButtonGroup>\n      </Container>\n\n\n\n      {/* renders component based on view variable */}\n      {view === 'login' &&\n        <Login />\n      }\n      {view === 'signup' &&\n        <Signup />\n      }\n\n    </div>\n  )\n}\n\nexport default AuthFlow;","import React from 'react'\nimport './LandingPage.css'\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\n\n\n\nconst LandingPage = () => {\n  return (\n\n    <div>\n\n      <Container maxWidth=\"xl\">\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item xs={12} sm={10} md={6}>\n\n            <div>\n              <img alt=\"stillness logo\" className=\"landing-img\" src=\"../../../assets/images/stillness-img.svg\"></img>\n\n              <h1 className=\"description-title\">Stillness is an  empowering gift to yourself.</h1>\n\n\n              <p className=\"description-paragraph\"> As fast-paced as life may be, it is necessary to step away and reclaim time for self-care. The Stillness app was created as a gentle reminder that cathartic release and mindful breathing together can be affirming in reclaiming your peace and clarity. Our application lets you track your mood while giving you space for reflective journaling each day. We send uplifting text reminders after each journaling session as a commemoration for self-care. Remove yourself from all external noise step into yourself with meditative breathing and relaxing music after a cathartic release. Take as much time as you need. This time and this space is just for you. Are you ready?\n          </p>\n\n            </div>\n            {/* link will take user to Login/Signup Page */}\n            {/* window is the api and location.href will link to to another page (url) */}\n\n          </Grid>\n          <a href className=\"landing-link\" onClick={() => window.location.href = \"/app/Login\"}> Login or Signup here</a>\n\n        </Grid>\n      </Container>\n    </div>\n  )\n}\n\n\nexport default LandingPage;","import React from 'react'\nimport './MoodButton.css'\nimport Button from '@material-ui/core/Button';\n\n// to capitalize the mood  name on button based on the type attribute\nconst capitalize = (t) => {\n  return t.charAt(0).toUpperCase() + t.slice(1)\n}\n\nconst MoodButton = (props) => {\n\n  // destructuring properties as props to use in MoodButton\n  const { value, type, active, color, setMood } = props\n\n  // handleButtonClick passes the type of button the click created\n  const handleButtonClick = () => {\n    setMood(type);\n  }\n\n  return (\n    <>\n      <Button className=\"mood-btn\" size='large' variant=\"contained\" onClick={handleButtonClick} value={value} type={type} style={active ? { backgroundColor: color } : {}} >{capitalize(type)} </Button>\n    </>\n  )\n}\n\n\nexport default MoodButton;","import React, { useState } from 'react'\nimport './MoodJournal.css'\nimport MoodButton from './Components/MoodButton/MoodButton'\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid'\nimport Container from '@material-ui/core/Container'\n\n\n\nconst MoodJournal = () => {\n  // gets the date\n  const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n  const today = new Date().toLocaleDateString('us-en', options)\n\n  // all hex colors for the mood stored inside object\n  const moodColor = {\n    yellow: '#E2B31C',\n    grey: '#626563',\n    blue: '#385F8A',\n    red: '#AB1C27',\n    purple: '#603775'\n  }\n\n  // all moods with type(mood) and value(color) stored inside array of objects\n  const moods = [{\n    type: 'happy',\n    value: 'yellow'\n  },\n  {\n    type: 'neutral',\n    value: 'grey'\n  },\n  {\n    type: 'sad',\n    value: 'blue'\n  },\n  {\n    type: 'angry',\n    value: 'red'\n  },\n  {\n    type: 'anxious',\n    value: 'purple'\n  }\n  ]\n\n  // moodOption has the mood stored in this variable and setMoodOption sets the mood whenever mood button gets clicked \n  const [moodOption, setMoodOption] = useState('')\n\n  // activeMoodColor stores the color that user clicks and setActiveMoodColor sets the state change of that button  depending on which mood is clicked\n  const [activeMoodColor, setActiveMoodColor] = useState('')\n\n  // storing journal entries inside of an empty string\n  const [journalSpace, setJournalSpace] = useState('')\n\n  // function to handle getting the mood and associated background color and clearing the background once the user clicks the button twice\n  const handleMood = (mood) => {\n    if (moodOption === mood) {\n      setMoodOption('');\n      setActiveMoodColor('')\n    }\n    else {\n      setMoodOption(mood);\n      const moodColor = moods.find(m => m.type === mood)\n      setActiveMoodColor(moodColor.value);\n    }\n  }\n\n  // function to grab value of what user enters in text area\n  const handleJournalSpace = (e) => {\n    const textAreaValue = e.target.value\n    setJournalSpace(textAreaValue)\n  }\n\n  // fuction to clear what user typed in entry space\n  const clearJournalEntry = () => {\n    // calling setJournalSpace to clear textarea\n    setJournalSpace('')\n  }\n  // function that saves user's journal entry and direct them to their reflections page\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const currentMood = moodOption\n    const form = { journalEntry: journalSpace, mood: currentMood }\n    fetch('/api/saveJournalEntry', {\n      method: \"Post\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(form)\n    }).then(res => res.json()).then(data => { if (data.success) { window.location.href = '/app/moodJournalHistory' } })\n  }\n\n  return (\n    <div className=\"mood-journal-container\">\n      <Container className=\"moodJournal-container\" component=\"main\" maxWidth=\"lg\">\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <nav>\n            <ul className=\"mood-journal-ul\">\n              <li className=\"mood-journal-li\"> <a className=\"mood-journal-link\" href onClick={() => window.location.href = \"/app/Breather\"}>Breathe </a></li>\n              <li className=\"mood-journal-li\"> <a className=\"mood-journal-link\" href onClick={() => window.location.href = \"/app/MoodJournalHistory\"}>View Reflections </a></li>\n              <li className=\"mood-journal-li\"> <a className=\"mood-journal-link\" href onClick={() => window.location.href = \"/app/Login\"}>Logout </a></li>\n            </ul>\n          </nav>\n\n          <img alt=\"stillness logo\" className=\"landing-img\" src=\"../../../assets/images/stillness-img.svg\"></img>\n\n          <div className=\"mood-title-paragraph\">\n            <h1 className=\"moodJournal-h1\">Thank you for being here on: {today} .</h1>\n            <p className=\"moodJournal-paragraph\">A space for release: How are you feeling today?</p>\n          </div>\n\n          {/*                MOOD BUTTONS \n        maps though moods array of and returns MoodButton component */}\n          <Grid item xs={12} sm={9} md={6}>\n            <div className=\"mood-btn-container\">\n              {moods.map(mood => <MoodButton value={mood.value} setMood={handleMood} type={mood.type} active={activeMoodColor === mood.value} color={moodColor[mood.value]} key={mood.type} />)}\n            </div>\n          </Grid>\n\n          {/* JOURNAL SPACE TEXT AREA */}\n          <div className=\"mood-journal-textarea\">\n            <form className=\"mood-journal-form\">\n              <textarea className=\"journal-space\" value={journalSpace} rows=\"12\" cols=\"50\" name=\"journalEntry\" onChange={handleJournalSpace} placeholder=\"Feel free to further express yourself here.\" />\n            </form>\n          </div>\n\n\n\n          <div className=\"moodJournal-btns-container\">\n            {/* clears texarea */}\n            <Button variant=\"contained\" color=\"default\" className=\"clear-btn\" onClick={clearJournalEntry}>Clear</Button>\n\n            {/* submits journal entry */}\n            <Button variant=\"contained\" color=\"default\" className=\"submit-btn\" onClick={handleSubmit}>Submit</Button>\n          </div>\n\n        </Grid>\n      </Container>\n    </div >\n  )\n}\n\nexport default MoodJournal;","import React, { useState } from 'react'\nimport './SoundButton.css'\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\n\n// sound list: it supports four different audio sounds\nconst sounds = {\n  Ambient: new Audio('https://freesound.org/data/previews/554/554220_9497060-lq.mp3'),\n  Nature: new Audio('https://freesound.org/data/previews/524/524813_10859468-lq.mp3'),\n  Ocean: new Audio(' https://freesound.org/data/previews/413/413326_7723777-lq.mp3'),\n  Dreamy: new Audio('https://freesound.org/data/previews/263/263467_3946286-lq.mp3')\n}\n\nconst SoundButton = (props) => {\n  const [isPlaying, setIsPlaying] = useState(false)\n\n  // function to handle the button's click and calls toggleSound() to play or pause audio depending on the state of isPlaying variable\n  const handleClick = () => {\n    return toggleSound()\n  }\n\n  // toggling the sound depending on the value of isPlaying and controlling the state\n  const toggleSound = () => {\n    if (isPlaying) {\n      sounds[props.type].pause()\n      setIsPlaying(false)\n    } else {\n      sounds[props.type].play()\n      setIsPlaying(true)\n    }\n  }\n  return (\n\n    <Container className=\"sound-btn-container\" maxWidth=\"sm\">\n      <Button variant=\"outlined\" className={\"sound-btn audio  sound-btn-\" + props.type} onClick={handleClick} type='button'>{props.type}</Button>\n    </Container>\n  )\n}\n\nexport default SoundButton","import React, { useState, useEffect } from 'react'\nimport './Breather.css'\nimport SoundButton from './Components/SoundButton/SoundButton'\n// import Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst Breather = () => {\n  //variable that stores text before breathing session begins\n  const initialBreatheText = 'Get Ready!'\n  //variable and function to set the breathe text to inhale/hold/exhale\n  const [breatheText, setBreatheText] = useState(initialBreatheText)\n  // the total time the pointer goes around the circumfrence: 7 seconds\n  const totalTime = 7500\n  // the amount of time the circle expands on inhale: 2.8 seconds\n  const breatheTime = (totalTime / 5) * 2\n  // the amount of time to hold breath: 1.4 seconds\n  const holdTime = totalTime / 5\n\n  const breatheAnimation = () => {\n    setBreatheText('Inhale')\n    setTimeout(() => {\n      setBreatheText('Hold')\n      setTimeout(() => {\n        setBreatheText('Exhale')\n      }, holdTime)\n    }, breatheTime)\n    clearInterval(counterInterval)\n  }\n\n  // the useEffect that was not working:\n  // it was being called multiple times which is why it was not behaving the way i wanted it to.\n  // useEffect(() => {\n  //   // equivalent to componentDidMount() and componentDidUpdate()\n  //   const animationTime = setInterval(breatheAnimation, totalTime)\n  //   // function that handles the umounting of the component and clears all resources\n  //   return () => {\n  //     // equivalent to componentWillUnmount()\n  //     clearInterval(animationTime)\n  //   }\n  // })\n\n  let counterInterval;\n  // function that handles the countdown before breathing begins\n  const initialBreatheCounter = () => {\n    setTimeout(() => {\n      let counter = 3\n      counterInterval = setInterval(() => {\n        setBreatheText(counter)\n        counter--\n      }, 1000)\n    }, 3500)\n\n  }\n  // triggers function every time something happens (like an update)\n  useEffect(() => {\n    // componentDidMount() \n    initialBreatheCounter()\n    const animationTime = setInterval(breatheAnimation, totalTime)\n    // function that handles the umounting of the component and clears all resources\n    return () => {\n      // componentWillUnmount()\n      clearInterval(animationTime)\n    }\n    // passing an empty array so that the useEffect is only run once. a way to define componentDidMount() so it runs only once\n    // lets me have an empty array without warning.\n    // eslint-disable-next-line \n  }, [])\n\n  // function that gets the class according the state of the breatheText variable\n  const getBreatherClass = () => {\n    if (breatheText === 'Inhale') {\n      return 'expand'\n    } else if (breatheText === 'Exhale') {\n      return 'shrink'\n    } else if (breatheText === initialBreatheText) {\n      return 'getready'\n    } else {\n      return 'hold'\n    }\n  }\n  // stores getBreatherClass() function\n  const breatherClass = getBreatherClass()\n\n  return (\n    <div className=\"breather-background-image\">\n\n      {/* navigation */}\n      <nav className=\"breather-nav\">\n        <ul className=\"navigation-links\">\n          <li className=\"breather-nav-li\"> <a href className=\"breather-nav-link\" onClick={() => window.location.href = \"/app/MoodJournal\"}> My Journal</a></li>\n          <li className=\"breather-nav-li\">  <a href className=\"breather-nav-link\" onClick={() => window.location.href = \"/app/MoodJournalHistory\"}>My Reflections</a> </li>\n          <li className=\"breather-nav-li\"> <a href className=\"breather-nav-link\" onClick={() => window.location.href = \"/app/Login\"}> Logout</a></li>\n        </ul>\n      </nav>\n\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <h1 className=\"breather-h1\">Breather</h1>\n\n        <Grid item xs={12} sm={9} md={6}>\n          {/* music plays on click event */}\n          <p className=\"soundButton-p\">Choose some music to relax to: </p>\n          <div className=\"soundButton-container\">\n\n            <SoundButton\n              type='Ambient'\n            />\n            <SoundButton\n              type='Nature'\n            />\n            <SoundButton\n              type='Ocean'\n            />\n            <SoundButton\n              type='Dreamy'\n            />\n          </div>\n        </Grid>\n        {/* </Grid> */}\n\n        {/* div that contains breather-container class the logic from breatherClass function that dynamically changes the className depending on state of breatheText variable*/}\n        <div className={`breather-container ${breatherClass}`}>\n          {/* <!-- this div represents the solid color circle and the conditional logic: if breatheText variable is equal to 'Get Ready!' then display the initial-circle class, otherwise display the circle class--> */}\n          <div className={`${breatheText === initialBreatheText ? \"initial-circle\" : \"circle\"}`}></div>\n\n          {/* breatheText is changed dynamically here */}\n          <p id=\"text\">{breatheText}</p>\n\n          {/* <!-- container to hold white pointer circle --> */}\n          <div className=\"pointer-container\">\n            <div className=\"pointer\"></div>\n          </div>\n\n          {/* <!-- gradient circle that helps indicate when to breathe/hold breath (gives the border effect) --> */}\n          <div className=\"gradient-circle\"></div>\n\n        </div>\n      </Grid>\n    </div >\n  )\n}\n\nexport default Breather;","import React, { useState } from 'react'\nimport './JournalEntry.css'\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon'\nimport Grid from '@material-ui/core/Grid';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Container from '@material-ui/core/Container';\n\n\n\nconst JournalEntry = (props) => {\n\n  const [entry, setEntry] = useState(props.journal)\n  // variable and function the view mode of the textarea for edited vs. unedited entry\n  const [editMode, setEditMode] = useState(false)\n  // variable and function to set the edits of the journal entry with the intial state of the original entry.\n  const [editJournalEntry, setEditJournalEntry] = useState(entry)\n\n  // function to save the journal entry and send to database\n  const handleSaveEntry = () => {\n    setEntry(editJournalEntry)\n    // setting edit mode to false to change view back to orginal entry\n    setEditMode(false)\n    // using fetch call with a put method to save updated entry to database\n    fetch('/api/journal', {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ _id: props.id, journal: editJournalEntry })\n    })\n      .then(response => response.json())\n      .then(data => console.log(data));\n  }\n  // function to grab the value of what user types into 'edit entry' textarea\n  const handleEditJournalEntry = (e) => {\n    // target is the textarea and value is the value user types into textarea\n    setEditJournalEntry(e.target.value)\n  }\n\n  // function to delete journal entry \n  const handleDeleteJournalEntry = () => {\n    fetch('/api/journal', {\n      method: 'DELETE',\n      mode: 'cors',\n      headers: {\n        'Accept': 'application/json', 'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify({ _id: props.id })\n      //using the journals array from MoodJournalHistory and filtering entries that haven't been deleted\n    }).then(props.journals(entry => entry.filter(journal => journal._id !== props.id)))\n    // .then()\n    //   .catch(err => console.log(err))\n  }\n  // conditionally rendering the edit mode: toggle view\n  // * if edit mode is true then display the textarea with the text to be edited\n  // * and display the save updated entry button\n  if (editMode === true) {\n    return (\n      <div className=\"journal-entry-edit\">\n        <p> Today I feel: {props.mood} </p>\n        <textarea\n          className=\"edit-textarea\"\n          value={editJournalEntry}\n          onChange={handleEditJournalEntry} >{editJournalEntry}</textarea>\n\n        <Container maxWidth=\"md\">\n          {/* save edit entry */}\n          <Icon\n            onClick={handleSaveEntry}>\n            <SaveIcon style={{ fill: '#581845' }} fontSize=\"large\" />\n          </Icon>\n\n          {/* cancel edit entry button */}\n          <Icon\n            onClick={() => setEditMode(false)}\n            className=\"edit-btn\">\n            <CancelOutlinedIcon style={{ fill: '#581845' }} fontSize=\"large\" />\n          </Icon>\n        </Container>\n      </div>\n    )\n    // else return the orginal entry\n  } else {\n    let dateOptions = { year: 'numeric', month: 'long', day: 'numeric' }\n    let timeOptions = { hour: '2-digit', minute: '2-digit' }\n    let journalDate = new Date(props.createdAt).toLocaleDateString('us-en', dateOptions)\n    let journalTime = new Date(props.createdAt).toLocaleTimeString('us-en', timeOptions)\n    return (\n      <div className=\"journal-entry\">\n\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item xs={12} >\n            <p className=\"journal-entry-date\">{journalDate} at {journalTime}</p>\n            <h4 className='feeling-title'> Today I feel: {props.mood}</h4>\n            <p className=\"journal-entry-paragraph\">{entry}</p>\n          </Grid>\n\n          {/* edit button */}\n          <Grid item xs={12}>\n            <Button\n              onClick={() => setEditMode(true)}\n              id=\"edit-btn\"\n              variant=\"contained\"\n              color=\"default\"\n              startIcon={<EditIcon />}\n            > Edit\n            </Button>\n            {/* delete button */}\n            <Button\n              onClick={handleDeleteJournalEntry}\n              id=\"delete-btn\"\n              variant=\"contained\"\n              color=\"default\"\n              startIcon={<DeleteIcon />}\n            > Delete\n          </Button>\n          </Grid>\n        </Grid>\n      </div>\n    )\n  }\n}\n\n\n\nexport default JournalEntry;","import React, { useEffect, useState } from 'react'\nimport JournalEntry from '../JournalEntry/JournalEntry'\nimport './MoodJournalHistory.css'\n// import Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\n\nconst MoodJournalHistory = () => {\n\n  const [journals, setJournals] = useState([])\n  useEffect(() => {\n    fetch('/api/userJournals')\n      .then(res => res.json()).then(data => { setJournals(data.result) })\n    // dependency array that checks for changes between the hook that is placed in the dependency array\n  }, [])\n\n  return (\n    <div className=\"mood-history-container\">\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <nav className=\"moodHistory-nav-container\">\n          <ul className=\"moodHistory-ul\">\n            <li className=\"moodHistory-li\"><a className=\"moodHistory-link\" href onClick={() => window.location.href = \"/app/MoodJournal\"}>Back to Journal</a></li>\n            <li className=\"moodHistory-li\"><a className=\"moodHistory-link\" href onClick={() => window.location.href = \"/app/Breather\"}>Begin Breathing</a></li>\n          </ul>\n        </nav>\n      </Grid>\n\n      {/* ___________________________________________________________________\n \n                                JOURNAL ENTRIES \n        all entries are mapped through and returns JournalEntry component\n      ____________________________________________________________________ */}\n\n      <div className=\"entry-container\">\n        <h1 className='reflection-title'>Your Reflections</h1>\n        <img alt=\"stillness logo\" className=\"landing-img\" src=\"../../../assets/images/stillness-img.svg\"></img>\n\n        <Container maxWidth=\"lg\">\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={3}\n          >\n            {journals.map(entry => {\n              // styling my journal entries here \n              return (\n                <Grid item xs={12} sm={9} md={6}>\n                  <JournalEntry\n                    key={entry._id}\n                    id={entry._id}\n                    // manually moving data from database\n                    journals={setJournals}\n                    // passing everything over from the entry variable\n                    {...entry}\n                  />\n                </Grid>\n              )\n            })}\n\n          </Grid>\n        </Container>\n      </div>\n    </div >\n  )\n}\n\nexport default MoodJournalHistory;","import React from 'react';\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n  // useParams\n} from \"react-router-dom\"\nimport AuthFlow from '../Authentication/AuthFlow/AuthFlow';\nimport LandingPage from '../Authentication/LandingPage/LandingPage'\nimport MoodJournal from '../MoodJournal/MoodJournal';\nimport Breather from '../Breather/Breather'\nimport MoodJournalHistory from '../MoodJournalHistory/MoodJournalHistory'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/app\">\n            <LandingPage />\n          </Route>\n        </Switch>\n\n        <Switch>\n          <Route exact path=\"/app/Login\">\n            <AuthFlow />\n          </Route>\n        </Switch>\n\n        <Switch>\n          <Route exact path=\"/app/MoodJournal\">\n            <MoodJournal />\n          </Route>\n        </Switch>\n\n        <Switch>\n          <Route exact path=\"/app/MoodJournalHistory\">\n            <MoodJournalHistory />\n          </Route>\n        </Switch>\n\n        <Switch>\n          <Route exact path=\"/app/Breather\">\n            <Breather />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App/App';\n\n\nReactDOM.render(\n\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}